package com.klef.jfsd.erp.controller;

import com.klef.jfsd.erp.service.FacultyService;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.klef.jfsd.erp.DTO.LoginRequest;
import com.klef.jfsd.erp.model.Course;
import com.klef.jfsd.erp.model.Faculty;
import com.klef.jfsd.erp.model.Student;

@RestController
@RequestMapping("/faculty")
public class FacultyController {

    @Autowired
    private FacultyService facultyService;

    @GetMapping("/viewAllStudents")
    public ResponseEntity<List<Student>> viewAllStudents() {
        List<Student> students = facultyService.viewAllStudentsForFaculty();
        return ResponseEntity.ok(students);
    }
    
    @GetMapping("/viewStudent/{id}")
    public ResponseEntity<Student> viewStudentById(@PathVariable Long id) {
        Student student = facultyService.viewStudentById(id);
        return ResponseEntity.ok(student);
    }
    
   
    
    @GetMapping("/viewCourses")
    public ResponseEntity<List<Course>> viewAllCoursesForFaculty(@RequestParam Long facultyId) {
        List<Course> courses = facultyService.viewCoursesForFaculty(facultyId);
        return ResponseEntity.ok(courses);
    }
    
    @PostMapping("/checkFacultyLogin")
    public ResponseEntity<Map<String, String>> checkFacultyLogin(@RequestBody LoginRequest request) {
        // Check faculty login using the id and password
        Faculty faculty = facultyService.checkFacultyLogin(request);
        
        if (faculty != null)
        {
        	Map<String, String> response = new HashMap<>();
            response.put("message", "Login successful");
            response.put("role", "faculty");  // Include the role
            return ResponseEntity.ok(response); // Return the response with role
        } else
        {
        	
            // If login fails, return an error response
            return ResponseEntity.status(HttpStatus.UNAUTHORIZED)
                                 .body(null);
        }
    }

    
}
